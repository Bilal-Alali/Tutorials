<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg version="1.1" width="320" height="112"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg">
  <title>RIOT's netdev class diagram</title>
  <metadata>
    <rdf:RDF>
      <cc:Work rdf:about="Class diagram of netdev">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title>RIOT's netdev class diagram</dc:title>
        <cc:license rdf:resource="http://creativecommons.org/licenses/by-sa/3.0/" />
        <dc:creator>
          <cc:Agent>
            <dc:title>Martine Lenders</dc:title>
          </cc:Agent>
        </dc:creator>
      </cc:Work>
      <cc:License rdf:about="http://creativecommons.org/licenses/by-sa/3.0/">
        <cc:permits rdf:resource="http://creativecommons.org/ns#Reproduction" />
        <cc:permits rdf:resource="http://creativecommons.org/ns#Distribution" />
        <cc:permits rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#Notice" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#Attribution" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#ShareAlike" />
      </cc:License>
    </rdf:RDF>
  </metadata>
  <defs id="defs3524">
    <style type="text/css">
      <![CDATA[
        rect {
          fill: #ffffff;
          stroke: #000000;
          stroke-linecap: round;
          stroke-linejoin: round;
          stroke-width: 1;
        }
        path {
          stroke: #000000;
          stroke-width: 1;
        }
        text.classname {
          line-height: 125%;
          fill: #000000;
          font-family: 'CMU Typewriter Text';
          font-size: 10px;
          text-anchor: middle;
        }
        text.classmember {
          line-height: 125%;
          fill: #000000;
          font-family: 'CMU Sans Serif';
          font-size: 10px;
          text-align: left;
          text-anchor: start;
        }
        text.classmember .vis {
          font-family: 'CMU Typewriter Text';
        }
        text.rel_from {
          line-height: 125%;
          fill: #000000;
          font-family: 'CMU Typewriter Text';
          font-size: 8px;
          text-align: left;
          text-anchor: start;
        }
        text.rel_to {
          line-height: 125%;
          fill: #000000;
          font-family: 'CMU Typewriter Text';
          font-size: 8px;
          text-align: right;
          text-anchor: end;
        }
      ]]>
    </style>
  </defs>
  <g>
    <g id="netdev" transform="translate(5,5)">
      <rect x="0" y="0" width="140" height="102" />
      <text class="classname" x="70" y="10"><tspan>netdev_t</tspan></text>
      <path d="m 0,14 140,0" />
      <text class="classmember" x="1" y="24" xml:space="preserve"><tspan class="vis">+</tspan><tspan>event_callback : </tspan><tspan class="vis">callback_t</tspan></text>
      <text class="classmember" x="1" y="36" xml:space="preserve"><tspan class="vis">+</tspan><tspan>context : </tspan><tspan class="vis">void*</tspan></text>
      <path d="m 0,40 140,0" />
      <text class="classmember" x="1" y="50" xml:space="preserve"><tspan class="vis">+</tspan><tspan>send(<tspan class="vis">data_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="62" xml:space="preserve"><tspan class="vis">+</tspan><tspan>recv(<tspan class="vis">data_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="74" xml:space="preserve"><tspan class="vis">+</tspan><tspan>get(<tspan class="vis">opt_type</tspan>, <tspan class="vis">opt_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="86" xml:space="preserve"><tspan class="vis">+</tspan><tspan>set(<tspan class="vis">opt_type</tspan>, <tspan class="vis">opt_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="98" xml:space="preserve"><tspan class="vis">+</tspan><tspan>isr() : </tspan><tspan class="vis">void</tspan></text>
    </g>
    <g>
        <path d="m 145,39 30,0" />
        <text class="rel_from" x="147" y="37">*</text>
        <text class="rel_to" x="173" y="37">1</text>
    </g>
    <g id="netdev_driver" transform="translate(175,5)">
      <rect x="0" y="0" width="140" height="78" />
      <text class="classname" x="70" y="10"><tspan>netdev_driver_t</tspan></text>
      <path d="m 0,14 140,0" />
      <path d="m 0,16 140,0" />
      <text class="classmember" x="1" y="26" xml:space="preserve"><tspan class="vis">+</tspan><tspan>send(<tspan class="vis">data_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="38" xml:space="preserve"><tspan class="vis">+</tspan><tspan>recv(<tspan class="vis">data_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="50" xml:space="preserve"><tspan class="vis">+</tspan><tspan>get(<tspan class="vis">opt_type</tspan>, <tspan class="vis">opt_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="62" xml:space="preserve"><tspan class="vis">+</tspan><tspan>set(<tspan class="vis">opt_type</tspan>, <tspan class="vis">opt_buf</tspan>) : </tspan><tspan class="vis">int</tspan></text>
      <text class="classmember" x="1" y="74" xml:space="preserve"><tspan class="vis">+</tspan><tspan>isr() : </tspan><tspan class="vis">void</tspan></text>
    </g>
  </g>
</svg>
